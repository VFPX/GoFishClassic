*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="gofishui.vcx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS _gofish AS custom 
 	*< CLASSDATA: Baseclass="custom" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*p: cappname
		*p: capppath
		*p: cbuilddate
		*p: cversion
		*p: oresultsform
		*p: _memberdata		&& XML Metadata for customizable properties
	*</DefinedPropArrayMethod>

	*<PropValue>
		cappname = 
		capppath = 
		cbuilddate = 
		cversion = 
		Name = "_gofish"
		oresultsform = .NULL.
		_memberdata = <VFPData>
			<memberdata name="cappname" display="cAppName"/>
			<memberdata name="capppath" display="cAppPath"/>
			<memberdata name="cversion" display="cVersion"/>
			<memberdata name="oresultsform" display="oResultsForm"/>
			<memberdata name="cbuilddate" display="cBuildDate"/>
		</VFPData>
	*</PropValue>
	
	PROCEDURE Destroy
		This.oResultsForm = .null.
	ENDPROC

ENDDEFINE

DEFINE CLASS gf_baseform AS form 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*m: copyobjectproperties
		*m: loadformsettings
		*m: saveformsettings
		*p: cuisettingsfile
		*p: oform
		*p: omy
		*p: osearchengine
		*p: osearchoptions
		*p: _memberdata		&& XML Metadata for customizable properties
	*</DefinedPropArrayMethod>

	*<PropValue>
		Caption = "GoFish"
		cuisettingsfile = 
		Desktop = .T.
		DoCreate = .T.
		Height = 325
		Left = 0
		Name = "gf_baseform"
		oform = .NULL.
		omy = .NULL.
		osearchengine = .NULL.
		osearchoptions = .NULL.
		Top = 0
		Width = 662
		_memberdata = <VFPData>
			<memberdata name="loadformsettings" display="LoadFormSettings"/>
			<memberdata name="cuisettingsfile" display="cUISettingsFile"/>
			<memberdata name="saveformsettings" display="SaveFormSettings"/>
			<memberdata name="oform" display="oForm"/>
			<memberdata name="osearchengine" display="oSearchEngine"/>
			<memberdata name="osearchoptions" display="oSearchOptions"/>
			<memberdata name="omy" display="oMy"/>
			<memberdata name="copyobjectproperties" display="CopyObjectProperties"/>
		</VFPData>
	*</PropValue>
	
	PROCEDURE Activate
		Set Talk Off && Just in case user has turn this on somehow or accidentally
		Set Echo Off
		Set Exact On
		Set Deleted Off
	ENDPROC

	PROCEDURE copyobjectproperties
		Lparameters toSourceObject, toNewObject
		*-- Adapted from: http://www.berezniker.com/content/pages/visual-foxpro/shallow-copy-object
		
		Local laProps[1], lcPropName, lnI
		
		For lnI = 1 To Amembers(laProps, toSourceObject, 0, 'U')
		    lcPropName = Lower(laProps[lnI])
		    If Type([toSourceObject.] + lcPropName ,1) = 'A'
		        AddProperty(toNewObject, lcPropName + '[1]', Null )
		        = Acopy(toSourceObject.&lcPropName, loNewObject.&lcPropName)
		    Else
		        AddProperty(toNewObject, lcPropName, Evaluate('toSourceObject.' + lcPropName) )
		    Endif
		Endfor
		
		Return toNewObject
		
	ENDPROC

	PROCEDURE Destroy
		DoDefault()
		
		This.SaveFormSettings()
		
		*This.oForm = .null.
		
	ENDPROC

	PROCEDURE Init
		Lparameters toForm
		
		Thisform.cUISettingsFile = Addbs(Home(7)) + Strtran(This.Name, ' ', '_') + '_Form_Settings.xml'
		
		This.LoadFormSettings()
		
		This.oForm = toForm
		
		If Vartype(toForm) = 'O'
			This.oSearchEngine = toForm.oSearchEngine
			This.oSearchOptions = toForm.oSearchEngine.oSearchOptions
		Endif
		
	ENDPROC

	PROCEDURE Load
		Set Talk Off
		Set Echo Off
		
		DoDefault()
		
	ENDPROC

	PROCEDURE loadformsettings
		Local loMy as 'My' OF 'My.vcx'
		Local lcFile, loSettings
		
		lcFile = This.cUISettingsFile
		
		loMy = Newobject('My', 'My.vcx')
		loSettings = loMy.Settings
		
		Thisform.oMy = loMy
		
		If !File(lcFile)
			return
		Endif
		
		loSettings.Load(lcFile)
		
		*-- Resize form size and position--------------------
		If loSettings.Exists('FormTop')
			With loSettings
				This.Top    = .FormTop
				This.Left   = .FormLeft
				This.Height = .FormHeight
				This.Width  = .FormWidth
			EndWith
			
			This.Resize()
		EndIf
		
		
		
		  
	ENDPROC

	PROCEDURE LostFocus
		Activate Screen
	ENDPROC

	PROCEDURE saveformsettings
		Local lcFile, loSettings
		
		loSettings = Thisform.oMy.Settings
		
		lcFile = This.cUISettingsFile
		
		With loSettings
			*-- Form Size and Position -----------------------------
			.Add('FormTop',    This.Top)
			.Add('FormLeft',   This.Left)
			.Add('FormHeight', This.Height)
			.Add('FormWidth',  This.Width)
		
			.Save(lcFile)
		
		Endwith
		
		
		
		
		  
	ENDPROC

ENDDEFINE

DEFINE CLASS gf_combosearchexpressionhistory AS combobox 
 	*< CLASSDATA: Baseclass="combobox" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*m: loadrows
		*m: opentable
		*m: savesearchexpression
		*p: ctable
		*p: nexpressionstostore
		*p: nmaxmru
		*p: _memberdata		&& XML Metadata for customizable properties
	*</DefinedPropArrayMethod>

	*<PropValue>
		Anchor = 10
		ctable = 
		Height = 24
		Name = "gf_combosearchexpressionhistory"
		nexpressionstostore = 15
		nmaxmru = 7
		Visible = .F.
		Width = 100
		_memberdata = <VFPData>
			<memberdata name="nexpressionstostore" display="nExpressionsToStore"/>
			<memberdata name="opentable" display="OpenTable"/>
			<memberdata name="loadrows" display="LoadRows"/>
			<memberdata name="ctable" display="cTable"/>
			<memberdata name="savesearchexpression" display="SaveSearchExpression"/>
			<memberdata name="nmaxmru" display="nMaxMRU"/>
		</VFPData>
	*</PropValue>
	
	PROCEDURE Click
		This.Visible = .F.
		
		With This.Parent.editSearch
			.Value = Rtrim(This.Value)
			.SetFocus()
			.SelStart = 999
		Endwith
		
		lcValue = This.value
		This.SaveSearchExpression(This.Value) && Will move this entry to the top of the list
		This.Value = Alltrim(lcValue)
		
		
	ENDPROC

	PROCEDURE Init
		this.Top = this.Parent.editSearch.top
		
		This.cTable = Addbs(Home(7)) + 'GF_Search_Expression_History.dbf'
		
		This.LoadRows()
		
		
		
	ENDPROC

	PROCEDURE KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		
		If nKeyCode = 27 && ESC Key
			this.Tag = 'ESCAPE'
			this.Visible = .f.
			This.Parent.editSearch.SetFocus()
			This.Parent.editSearch.SelStart = 999
			This.Parent.editSearch.SelLength = 1
			NoDefault 
		EndIf
		
		
		
	ENDPROC

	PROCEDURE loadrows
		Local lItemExists, lcItem, lnSelect, lnCounter
		
		lnCounter = 0
		
		lnSelect = Select()
		
		This.OpenTable()
		
		*-- Rebuild the combobox values -------------------------------
		This.RowSource = '' && Clear out rows
		
		Scan
		
			lcItem = Alltrim(Lower(expression))
			lItemExists = .F. && assume the value isn't in the list.
		
			For i = 1 To This.ListCount
				If Alltrim(Lower(This.List(i))) == lcItem
					lItemExists = .T.
					Exit
				Endif
			Endfor
		
			If !lItemExists
				This.AddItem(lcItem)
				lnCounter = lnCounter + 1
				If lnCounter = This.nMaxMRU
					Exit
				Endif
			Endif
		Endscan
		
		Use
		
		This.Refresh()
		
		Select (lnSelect)  
	ENDPROC

	PROCEDURE LostFocus
		this.Visible = .f.
		
	ENDPROC

	PROCEDURE opentable
		Local lcCursor, lcFilter, lcScope, lcSearchExpressionTable, lnExpressionsToStore
		
		lcSearchExpressionTable = This.cTable
		lnExpressionsToStore = This.nExpressionsToStore
		
		If !File(lcSearchExpressionTable)
			Create Table (lcSearchExpressionTable) Free (Expression C(128), Item I, scope C(254))
			Append Blank
			Use
		Endif
		
		If !Used(Juststem(lcSearchExpressionTable))
			Select 0
			Use (lcSearchExpressionTable)
		Endif
		
		Goto Top
		
	ENDPROC

	PROCEDURE Refresh
		Try
			This.Enabled = !Thisform.lSearching&& and !Thisform.lReplaceMode
		Catch
		Endtry
		
		
	ENDPROC

	PROCEDURE savesearchexpression
		Lparameters tcSearchExpression
		
		Local lcCursor, lcScope, lcTable, lnExpressionsToStore, loCombo
		
		If Empty(tcSearchExpression)
			Return
		Endif
		
		lcCursor = 'SearchExpressionHistory'
		lnExpressionsToStore = This.nExpressionsToStore
		lcTable = This.cTable
		lcScope = Lower(Thisform.GetCurrentScope())
		
		*-- New cursor with this new search express
		Create Cursor (lcCursor) (Expression C(128), Item I, scope C(254))
		Append Blank
		Replace Item With 1
		Replace Expression With tcSearchExpression
		Replace scope With lcScope
		
		*--- Pull other records from the scope out of expression hist table
		Insert Into (lcCursor) (Expression, Item, scope) ;
			Select Expression, Item + 1, scope From (lcTable) ;
			Where Item < lnExpressionsToStore ;
			And !(Rtrim(Expression) == Rtrim(tcSearchExpression)) ;
			And !Empty(Expression)
		
		Replace Item With Recno(lcCursor) In (lcCursor) All
		
		Use In (Juststem(lcTable))
		
		Try
			Delete File (lcTable)
			Copy To (lcTable)
			Use (lcTable)
		Catch
		Endtry
		
		This.LoadRows()
	ENDPROC

	PROCEDURE Valid
		If This.Tag = 'ESCAPE'
			With This.Parent.editSearch
				.Value = This.Parent.comboSearchExpressionHistoryDropDownArrow.Tag
				.SelStart = 999
				.SelLength = 1
			Endwith
			This.Tag = ''
		Endif
		
		lItemExists = .F. && assume the value isn't in the list.
		For i = 1 To This.ListCount
			If Lower(This.List(i)) = Lower(This.Text)
				lItemExists = .T.
				Exit
			Endif
		Endfor
		
		If !lItemExists
			This.AddItem(Lower(This.Text))
		Endif
		
		
		This.Value = This.Text
		
		Thisform.Refresh()
	ENDPROC

ENDDEFINE

DEFINE CLASS gf_combosearchscope AS combobox 
 	*< CLASSDATA: Baseclass="combobox" Timestamp="" Scale="Pixels" Uniqueid="" />

	#INCLUDE "gofish.h"
	*<DefinedPropArrayMethod>
		*m: addrow
		*m: loadprojects		&& Adds a list item for each project in the passed collection of Projects.
		*m: loadrows
		*m: opentable
		*m: savesearchscope
		*m: updateimageicon
		*p: ctable
		*p: nexpressionstostore
		*p: nmaxmru
		*p: _memberdata		&& XML Metadata for customizable properties
	*</DefinedPropArrayMethod>

	*<PropValue>
		Anchor = 10
		ctable = 
		Height = 24
		Name = "gf_combosearchscope"
		nexpressionstostore = 15
		nmaxmru = 7
		Width = 365
		_memberdata = <VFPData>
			<memberdata name="opentable" display="OpenTable"/>
			<memberdata name="nexpressionstostore" display="nExpressionsToStore"/>
			<memberdata name="savesearchscope" display="SaveSearchScope"/>
			<memberdata name="loadrows" display="LoadRows"/>
			<memberdata name="loadprojects" display="LoadProjects"/>
			<memberdata name="ctable" display="cTable"/>
			<memberdata name="addrow" display="AddRow"/>
			<memberdata name="updateimageicon" display="UpdateImageIcon"/>
			<memberdata name="nmaxmru" display="nMaxMRU"/>
		</VFPData>
	*</PropValue>
	
	PROCEDURE addrow
		Lparameters tcScope
		
		Local lItemExists, lcItem
		
		If Right(tcScope, 1) == ' '
			lcItem = Alltrim(Lower(tcScope))
		Else
			lcItem = tcScope
		EndIf
		
		lcItem = Rtrim(lcItem, '\')
		
		lItemExists = .F. && assume the value isn't in the list.
		
		For i = 1 To This.ListCount
			If Alltrim(Lower(This.List(i))) == lcItem
				lItemExists = .T.
				Exit
			Endif
		Endfor
		
		If !lItemExists
			This.AddItem(lcItem)
		Endif
	ENDPROC

	PROCEDURE GotFocus
		This.Tag = This.value
	ENDPROC

	PROCEDURE Init
		This.cTable = Addbs(Home(7)) + 'GF_Search_Scope_History.dbf'
		
		This.LoadRows()
		 
	ENDPROC

	PROCEDURE InteractiveChange
		This.UpdateImageIcon()
	ENDPROC

	PROCEDURE loadprojects		&& Adds a list item for each project in the passed collection of Projects.
		Lparameters toProjects
		
		Local lcSearchScopeTable, lnSelect, loProject
		
		lnSelect = Select()
		
		This.OpenTable()
		
		*-- Be sure that each of the recent projects are in the Scope History table ----------
		For Each loProject in toProjects
			Locate for Alltrim(Lower(scope)) == Alltrim(Lower(loProject))
			If !Found()
				Append Blank
				Replace scope with Alltrim(Lower(loProject))
				Replace item with Recno()
			Endif
		EndFor
		
		Select (lnSelect) 
	ENDPROC

	PROCEDURE loadrows
		Local lItemExists, lcItem, lnSelect, lcScope, lnCounter
		
		lnCounter = 0
		
		lnSelect = Select()
		
		This.OpenTable()
		
		*-- Rebuild the combobox values -------------------------------
		This.RowSource = '' && Clear out rows
		
		This.AddRow('\ -- Projects -------------------------')
		If Type('_vfp.ActiveProject') = 'O'
			This.AddRow('<< Active Project >>')
		Endif
		
		*-- Add Projects --------------------------
		Scan for Upper(JustExt(scope)) == 'PJX'
			This.AddRow(scope)
			lnCounter = lnCounter + 1
			If lnCounter = This.nMaxMRU
				Exit
			Endif
		Endscan
		
		This.AddRow('')
		This.AddRow('\ -- Folders ----------------------------')
		This.AddRow('<< Current Dir >>')
		
		*-- Add Folders
		Scan for Upper(JustExt(scope)) <> 'PJX'
			lcScope = scope
			If Left(lcScope,2) = '\\'
			 lcScope = '\' + '\' + lcScope
			Endif
		
			This.AddRow(lcScope)
		
			lnCounter = lnCounter + 1
		
			If lnCounter = 2 * This.nMaxMRU
				Exit
			Endif
		
		Endscan
		
		Use
		
		This.Refresh()
		
		Select (lnSelect)    
	ENDPROC

	PROCEDURE opentable
		Local lcTable, lnExpressionsToStore
		
		lcTable = This.cTable
		lnExpressionsToStore = This.nExpressionsToStore
		
		If !File(lcTable)
			Create Table (lcTable) Free (scope C(254), item I)
			Append Blank
			Use
		EndIf
		
		If !Used(JustStem(lcTable))
			Select 0
			Use (lcTable) 
		Else
			Select (JustStem(lcTable))
		Endif
		
		*-- Clean out any junk or missing scopes---
		Scan
			lcScope = Alltrim(scope)
			If !Directory(lcScope, 1) and !File(lcScope) or Empty(lcScope)
				Delete Next 1 In (JustStem(lcTable))
			Endif
		Endscan
		 
		Goto Top
		
	ENDPROC

	PROCEDURE Refresh
		This.UpdateImageIcon()
	ENDPROC

	PROCEDURE savesearchscope
		Lparameters tcSearchScope
		
		Local lItemExists, lcCursor, lcSearchScopeTable, lcTable, lnExpressionsToStore, lnSelect, loCombo
		
		lnSelect = Select()
		
		If Empty(tcSearchScope)
			Return
		Endif
		
		lcCursor = 'SearchScopeHistory'
		
		lcSearchScopeTable = This.cTable
		lnExpressionsToStore = This.nExpressionsToStore
		
		lcTable = Home(7) + lcSearchScopeTable + '.dbf'
		
		tcSearchScope = Rtrim(Alltrim(tcSearchScope), 0, '\')
		
		*-- New cursor with this new search express
		Create Cursor (lcCursor) (scope C(254), item I)
		Append Blank
		Replace item With 1
		Replace scope With tcSearchScope 
		
		*--- Pull other scope records from hist table
		Insert Into (lcCursor) (scope, item) ; 
			Select Distinct Lower(Rtrim(scope, ' ', '\')), item ;
			From (lcSearchScopeTable) ;
			Where item < lnExpressionsToStore ;
				and !(Lower(Rtrim(scope, ' ',  '\')) == Lower(Rtrim(tcSearchScope, ' ', '\'))) ;
				and !Empty(scope) ;
			Order By 2
		
		Replace item With Recno(lcCursor) in (lcCursor) All
		
		*-- Update the permanent table (newest record is now at top) ---------------
		Use in (JustStem(lcSearchScopeTable))
		
		Try
			Delete File (lcSearchScopeTable) 
			Copy To (lcSearchScopeTable)
		Catch
		Endtry
		
		This.LoadRows()
		
		Select (lnSelect) 
	ENDPROC

	PROCEDURE updateimageicon
		Local lcScope, loImage
		
		lcScope = Upper(This.Text)
		loImage = This.parent.imgScopeIcon
		loImage.Visible = .t.
		
		Do Case
		
			Case '.PJX' $ lcScope
				loImage.Picture = '..\images\gf_project_icon_16.bmp'
		
			Case Empty(lcScope)
				loImage.Picture = ''
				loImage.Visible = .f.
				
			Otherwise
				loImage.Picture = '..\images\gf_folder_icon_16.bmp'
		Endcase
		
		 
		
		 
	ENDPROC

	PROCEDURE Valid
		Local lItemExists
		
		lItemExists = .F. && assume the value isn't in the list.
		lcValue = Alltrim(This.Text)
		lcValue = Rtrim(Lower(lcValue), '\')
		
		If This.Value = This.Tag and !Empty(This.Tag)
			Return .t.
		EndIf
		
		For i = 1 To This.ListCount
			If Lower(This.List(i)) = lcValue
				lItemExists = .T.
				Exit
			Endif
		Endfor
		
		If !lItemExists
			This.AddItem(lcValue)
		Endif
		
		Do Case
		
			Case Empty(lcValue)
				Thisform.Refresh()
				Return
		
			Case lcValue == Lower('<< Active Project >>')
				Thisform.oSearchOptions.nSearchScope = 1
				lcValue = Lower(Thisform.oSearchEngine.GetActiveProject())
				Thisform.oSearchOptions.cProject = lcValue
		
			Case '.PJX' $ Upper(lcValue)
				If !File(lcValue)
					MessageBox('File not found.', 16, 'Error')
					This.Value = lcValue
					Return
				Endif
				Thisform.oSearchOptions.nSearchScope = 2
				Thisform.oSearchOptions.cProject = lcValue
		
			Case lcValue == Lower('<< Current Dir >>')
				Thisform.oSearchOptions.nSearchScope = 3
				lcValue = Alltrim(Lower(Thisform.oSearchEngine.GetCurrentDirectory()), '\')
				Thisform.oSearchOptions.cPath = lcValue
		
			Otherwise
				If !Directory(lcValue, 1)
					MessageBox('Invalid directory.', 16, 'Error')
					This.Value = lcValue
					Return
				Endif
				Thisform.oSearchOptions.nSearchScope = 4
				Thisform.oSearchOptions.cPath = lcValue
		
		Endcase
		
		This.SaveSearchScope(lcValue) && Will move this entry to the top of the list
		This.Value = Alltrim(lcValue)
		This.Tag = This.Value
		
		Thisform.Refresh()    
	ENDPROC

ENDDEFINE

DEFINE CLASS gf_filtercheckbox AS checkbox 
 	*< CLASSDATA: Baseclass="checkbox" Timestamp="" Scale="Pixels" Uniqueid="" />

	#INCLUDE "gofish.h"
	*<DefinedPropArrayMethod>
		*p: _memberdata		&& XML Metadata for customizable properties
	*</DefinedPropArrayMethod>

	*<PropValue>
		Alignment = 0
		AutoSize = .T.
		BackStyle = 0
		Caption = "<Caption>"
		FontName = "Tahoma"
		FontSize = 8
		Height = 15
		Name = "gf_filtercheckbox"
		TabIndex = 1
		Value = .T.
		Width = 71
		_memberdata = <VFPData>
			<memberdata name="caption" display="Caption"/>
		</VFPData>
	*</PropValue>
	
	PROCEDURE Click
		*By the time we get here, the value has already been toggled by VFP.
		*Toggle back to what it was before they clicked it.
		this.Value = !this.Value
		
		*-- Now process with this logic...
		If this.Value = .t. 
			this.Value = .f.
		Else
			If this.ForeColor = RGB(0,0,0)
				This.Value = .t.
			Endif
		EndIf
		
		this.Parent.Refresh()
		
		
		
		
			
	ENDPROC

ENDDEFINE

DEFINE CLASS gf_filtercheckboxcontainer AS container 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Label1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Command1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Command2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Line1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Line2" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: clear		&& Clears the contents of a ComboBox or ListBox control.
		*m: cleardecoration
		*m: decorate
		*m: ldecorated_assign
		*m: setallcheckboxes
		*m: shouldbedecorated
		*p: cfilter
		*p: ldecorated
		*p: ncheckboxcount
		*p: _memberdata		&& XML Metadata for customizable properties
	*</DefinedPropArrayMethod>

	*<PropValue>
		BorderColor = 150,150,150
		cfilter = 
		Height = 390
		ldecorated = .F.
		Name = "gf_filtercheckboxcontainer"
		ncheckboxcount = 0
		Width = 218
		_memberdata = <VFPData>
			<memberdata name="setallcheckboxes" display="SetAllCheckBoxes"/>
			<memberdata name="cfilter" display="cFilter"/>
			<memberdata name="ncheckboxcount" display="nCheckBoxCount"/>
			<memberdata name="bordercolor" display="BorderColor"/>
			<memberdata name="clear" display="Clear"/>
			<memberdata name="decorate" display="Decorate"/>
			<memberdata name="cleardecoration" display="ClearDecoration"/>
			<memberdata name="ldecorated" display="lDecorated"/>
			<memberdata name="ldecorated_assign" display="lDecorated_Assign"/>
			<memberdata name="shouldbedecorated" display="ShouldBeDecorated"/>
		</VFPData>
	*</PropValue>

	ADD OBJECT 'Command1' AS commandbutton WITH ;
		Anchor = 4, ;
		Caption = "All", ;
		FontSize = 8, ;
		Height = 21, ;
		Left = 10, ;
		Name = "Command1", ;
		TabStop = .F., ;
		Top = 367, ;
		Width = 31
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Command2' AS commandbutton WITH ;
		Anchor = 4, ;
		Caption = "Clear", ;
		FontSize = 8, ;
		Height = 21, ;
		Left = 46, ;
		Name = "Command2", ;
		TabStop = .F., ;
		Top = 367, ;
		Width = 48
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Label1' AS label WITH ;
		Alignment = 2, ;
		Anchor = 10, ;
		Caption = "Caption", ;
		Height = 17, ;
		Left = 7, ;
		Name = "Label1", ;
		Top = 4, ;
		Width = 207
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Line1' AS line WITH ;
		Anchor = 10, ;
		BorderColor = 192,192,192, ;
		Height = 0, ;
		Left = 6, ;
		Name = "Line1", ;
		Top = 20, ;
		Width = 207
		*< END OBJECT: BaseClass="line" />

	ADD OBJECT 'Line2' AS line WITH ;
		Anchor = 14, ;
		BorderColor = 192,192,192, ;
		Height = 0, ;
		Left = 5, ;
		Name = "Line2", ;
		Top = 362, ;
		Visible = .F., ;
		Width = 206
		*< END OBJECT: BaseClass="line" />
	
	PROCEDURE clear		&& Clears the contents of a ComboBox or ListBox control.
		For Each loControl in This.Controls
			If Upper(loControl.BaseClass) = 'CHECKBOX'
				loControl.value = 0
			Endif
		Endfor
		
		This.Refresh()
	ENDPROC

	PROCEDURE cleardecoration
		This.lDecorated = .F.
		
	ENDPROC

	PROCEDURE decorate
		This.lDecorated = .T.
	ENDPROC

	PROCEDURE Init
		Local loControl
		
		For Each loControl in This.Controls
			If Upper(loControl.baseclass) = 'CHECKBOX'
				this.nCheckBoxCount = this.nCheckBoxCount + 1
				BindEvent(loControl, 'Click', this, 'Refresh')
		
				*-- Apply This.label.caption so ControlSource will to match class property
				If !Empty(this.Label1.Tag) && Tag can override caption to set controlsource
					loControl.ControlSource = this.label1.Tag + '_' + Iif(!Empty(loControl.tag), loControl.Tag, loControl.Caption)
				Else
					lcProperty = Strtran(loControl.Caption, '<', '')
					lcProperty = Strtran(lcProperty, '>', '')
					lcProperty = Strtran(lcProperty, ' ', '')
		
					loControl.ControlSource = this.label1.Caption + '_' + Iif(!Empty(loControl.tag), loControl.Tag, lcProperty)
				Endif		
			
			Endif
				
		EndFor
		
		     
	ENDPROC

	PROCEDURE ldecorated_assign
		Lparameters tlDecorated
		This.lDecorated = m.tlDecorated
		
		If m.tlDecorated
			This.Label1.FontBold = .T.
			This.BorderWidth	 = 2
			This.BorderColor	 = Rgb(255, 0, 0)
		Else
			This.Label1.FontBold = .F.
			This.BorderWidth	 = 1
			This.BorderColor	 = Rgb(175, 175, 175)
		Endif
		
		If Pemstatus(Thisform, 'DecoratePage', 5) And This.Parent.BaseClass = 'Page'
			Thisform.DecoratePage(This.Parent)
		Endif
	ENDPROC

	PROCEDURE Refresh
		This.Label1.FontBold = .F.
		This.ClearDecoration()
		
		If This.ShouldBeDecorated()
			This.Label1.FontBold = .T.
			This.Decorate()
		Endif
		
	ENDPROC

	PROCEDURE setallcheckboxes
		Lparameters tnValue
		
		For each loControl in This.controls
			If PemStatus(loControl, 'Value', 5)
		*		If loControl.Enabled  = .t.
					loControl.value = tnValue
		*		EndIf
			EndIf
		EndFor
		
		
	ENDPROC

	PROCEDURE shouldbedecorated
		Local loControl
		For Each m.loControl In This.Controls
			If Upper(m.loControl.BaseClass) = 'CHECKBOX' And Not Empty(m.loControl.Value)&& and loControl.Enabled
				Return .T.
				Exit
			Endif
		Endfor
		Return .F.
	ENDPROC

	PROCEDURE Command1.Click
		This.Parent.SetAllCheckboxes(1)
		This.Parent.Refresh()
	ENDPROC

	PROCEDURE Command2.Click
		This.parent.SetAllCheckboxes(0)
		This.Parent.Refresh()
	ENDPROC

ENDDEFINE

DEFINE CLASS gf_filterform AS gf_baseform OF "gofishui.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Container1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.containerMatchType" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.containerMatchType.Check21" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.containerMatchType.Check11" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.containerMatchType.Check10" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.containerMatchType.Check18" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.containerMatchType.Check12" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.containerMatchType.Check14" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.containerMatchType.Check17" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.containerMatchType.Check16" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.containerMatchType.Check19" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.containerMatchType.Check20" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.containerMatchType.Check1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.containerMatchType.Check2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.containerMatchType.Check3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.containerMatchType.Check4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.containerMatchType.Check5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.containerMatchType.Check22" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.containerMatchType.Check7" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.containerMatchType.Check8" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.containerMatchType.Check9" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.containerMatchType.Check23" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.containerMatchType.Check24" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.containerMatchType.Gf_filtercheckbox1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.containerMatchType.Gf_filtercheckbox2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.containerMatchType.Gf_filtercheckbox3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.containerMatchType.Gf_filtercheckbox4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.containerMatchType.Label2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.containerMatchType.Line3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.containerMatchType.Gf_filtercheckbox5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.containerMatchType.Gf_filtercheckbox6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.containerMatchType.Gf_filtercheckbox7" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.containerFileType" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.containerFileType.chkTXT" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.containerFileType.chkASP" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.containerFileType.ChkHTML" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.containerFileType.chkH" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.containerFileType.chkMNX" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.containerFileType.chkSCX" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.containerFileType.chkVCX" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.containerFileType.chkDBC" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.containerFileType.chkLBX" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.containerFileType.chkFRX" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.containerFileType.chkPJX" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.containerFileType.chkPRG" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.containerFileType.chkSPR" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.containerFileType.chkMPR" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.containerFileType.chkini" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.containerFileType.chkJSP" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.containerFileType.chkJava" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.containerFileType.chkXML" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.containerFilename" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.containerFilePath" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.containerObjectName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.containerClassName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.containerMatchedLine" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.containerMethodName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.containerTimestamp" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.Textboxcontainer1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.Textboxcontainer2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.Textboxcontainer3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.Gf_textboxcontainer1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Shape1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdOK" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Command2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Command3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Check1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Check2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Line1" UniqueID="" Timestamp="" />

	#INCLUDE "gofish.h"
	*<DefinedPropArrayMethod>
		*m: applychanges
		*m: bind
		*m: buildcheckboxfilter
		*m: buildcontainerfilters
		*m: buildfilterstring
		*m: buildtextboxfilter
		*m: enablecontrol
		*m: loadfiltersettings		&& Loads saved settings from XML file.
		*m: savefiltersettings
		*p: ccodetypefilter
		*p: cfilenamefilter
		*p: cfiletypefilter
		*p: cfilter
		*p: cfilteroptionsclass
		*p: cfilteroptionsxmlfile
		*p: csearchresults
		*p: llreturn
		*p: ofilter
	*</DefinedPropArrayMethod>

	*<PropValue>
		BorderStyle = 2
		Caption = "GoFish Filter Builder"
		ccodetypefilter = 
		cfilenamefilter = 
		cfiletypefilter = 
		cfilter = 
		cfilteroptionsclass = GF_SearchResultsFilter
		cfilteroptionsxmlfile = (Home(7) + 'GF_Filter_Settings.xml')
		csearchresults = 
		DoCreate = .T.
		Height = 400
		Left = 0
		llreturn = .F.
		Name = "gf_filterform"
		ofilter = .NULL.
		Top = 0
		Visible = .T.
		Width = 885
		WindowType = 1
		_memberdata = <VFPData>
			<memberdata name="ofilter" display="oFilter"/>
			<memberdata name="applychanges" display="ApplyChanges"/>
			<memberdata name="cfilter" display="cFilter"/>
			<memberdata name="cfiletypefilter" display="cFileTypeFilter"/>
			<memberdata name="csearchresults" display="cSearchResults"/>
			<memberdata name="enablecontrol" display="EnableControl"/>
			<memberdata name="ccodetypefilter" display="cCodeTypeFilter"/>
			<memberdata name="bind" display="Bind"/>
			<memberdata name="cfilenamefilter" display="cFilenameFilter"/>
			<memberdata name="buildfilterstring" display="BuildFilterString"/>
			<memberdata name="loadformsettings" display="LoadFormSettings"/>
			<memberdata name="saveformsettings" display="SaveFormSettings"/>
			<memberdata name="cuisettingsfile" display="cUISettingsFile"/>
			<memberdata name="loadfiltersettings" display="LoadFilterSettings"/>
			<memberdata name="cfilteroptionsxmlfile" display="cFilterOptionsXMLFile"/>
			<memberdata name="cfilteroptionsclass" display="cFilterOptionsClass"/>
			<memberdata name="savefiltersettings" display="SaveFilterSettings"/>
			<memberdata name="buildcheckboxfilter" display="BuildCheckBoxFilter"/>
			<memberdata name="buildtextboxfilter" display="BuildTextboxFilter"/>
			<memberdata name="buildcontainerfilters" display="BuildContainerFilters"/>
			<memberdata name="llreturn" display="llReturn"/>
		</VFPData>
	*</PropValue>

	ADD OBJECT 'Check1' AS checkbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "Use leading ! (for NOT)", ;
		ControlSource = "Thisform.oFilter.FilterNot", ;
		Height = 17, ;
		Left = 703, ;
		Name = "Check1", ;
		Top = 317, ;
		Width = 144, ;
		ZOrderSet = 5
		*< END OBJECT: BaseClass="checkbox" />

	ADD OBJECT 'Check2' AS checkbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "Use wildcards (* and ?)", ;
		ControlSource = "Thisform.oFilter.FilterLike", ;
		Height = 17, ;
		Left = 703, ;
		Name = "Check2", ;
		Top = 288, ;
		Width = 147, ;
		ZOrderSet = 6
		*< END OBJECT: BaseClass="checkbox" />

	ADD OBJECT 'cmdOK' AS commandbutton WITH ;
		Anchor = 8, ;
		AutoSize = .F., ;
		Caption = "Apply", ;
		Default = .T., ;
		FontSize = 10, ;
		Height = 29, ;
		Left = 36, ;
		Name = "cmdOK", ;
		Top = 366, ;
		Width = 71, ;
		ZOrderSet = 2
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Command2' AS commandbutton WITH ;
		Anchor = 8, ;
		AutoSize = .F., ;
		Cancel = .T., ;
		Caption = "Cancel", ;
		FontSize = 9, ;
		Height = 23, ;
		Left = 815, ;
		Name = "Command2", ;
		Top = 427, ;
		Visible = .F., ;
		Width = 65, ;
		ZOrderSet = 3
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Command3' AS commandbutton WITH ;
		Anchor = 8, ;
		AutoSize = .F., ;
		Caption = "\<Clear All", ;
		FontSize = 10, ;
		Height = 29, ;
		Left = 786, ;
		Name = "Command3", ;
		Top = 366, ;
		Width = 65, ;
		ZOrderSet = 4
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Container1' AS container WITH ;
		BorderWidth = 0, ;
		Height = 358, ;
		Left = 4, ;
		Name = "Container1", ;
		Top = -2, ;
		Width = 880, ;
		ZOrderSet = 0
		*< END OBJECT: BaseClass="container" />

	ADD OBJECT 'Container1.containerClassName' AS gf_textboxcontainer WITH ;
		BorderColor = 200,200,200, ;
		Height = 80, ;
		Left = 750, ;
		Name = "containerClassName", ;
		TabIndex = 8, ;
		Tag = "_Class", ;
		Top = 95, ;
		Visible = .T., ;
		Width = 121, ;
		Label1.Caption = "Containing Class", ;
		Label1.Name = "Label1", ;
		Label1.Width = 114, ;
		Command1.Name = "Command1", ;
		Command1.Top = 55, ;
		Command2.Name = "Command2", ;
		Command2.Top = 55, ;
		LINE1.Name = "LINE1", ;
		LINE1.Width = 114, ;
		LINE2.Name = "LINE2", ;
		LINE2.Top = 51, ;
		LINE2.Width = 113, ;
		txt1.Name = "txt1", ;
		txt1.Width = 113
		*< END OBJECT: ClassLib="gofishui.vcx" BaseClass="container" />

	ADD OBJECT 'Container1.containerFilename' AS gf_textboxcontainer WITH ;
		BorderColor = 200,200,200, ;
		Height = 77, ;
		Left = 368, ;
		Name = "containerFilename", ;
		TabIndex = 4, ;
		Top = 191, ;
		Visible = .T., ;
		Width = 124, ;
		Label1.Caption = "Filename", ;
		Label1.Name = "Label1", ;
		Label1.Width = 113, ;
		Command1.Name = "Command1", ;
		Command1.Top = 54, ;
		Command2.Name = "Command2", ;
		Command2.Top = 54, ;
		LINE1.Name = "LINE1", ;
		LINE1.Width = 113, ;
		LINE2.Name = "LINE2", ;
		LINE2.Top = 50, ;
		LINE2.Width = 112, ;
		txt1.Name = "txt1", ;
		txt1.Width = 112
		*< END OBJECT: ClassLib="gofishui.vcx" BaseClass="container" />

	ADD OBJECT 'Container1.containerFilePath' AS gf_textboxcontainer WITH ;
		BorderColor = 200,200,200, ;
		Height = 77, ;
		Left = 496, ;
		Name = "containerFilePath", ;
		TabIndex = 5, ;
		Top = 191, ;
		Visible = .T., ;
		Width = 124, ;
		Label1.Caption = "FilePath", ;
		Label1.Name = "Label1", ;
		Label1.Width = 113, ;
		Command1.Left = 10, ;
		Command1.Name = "Command1", ;
		Command1.Top = 54, ;
		Command2.Left = 65, ;
		Command2.Name = "Command2", ;
		Command2.Top = 54, ;
		LINE1.Name = "LINE1", ;
		LINE1.Width = 113, ;
		LINE2.Left = 5, ;
		LINE2.Name = "LINE2", ;
		LINE2.Top = 51, ;
		LINE2.Width = 112, ;
		txt1.Name = "txt1", ;
		txt1.Width = 112
		*< END OBJECT: ClassLib="gofishui.vcx" BaseClass="container" />

	ADD OBJECT 'Container1.containerFileType' AS gf_filtercheckboxcontainer WITH ;
		BorderColor = 200,200,200, ;
		Height = 344, ;
		Left = 1, ;
		Name = "containerFileType", ;
		TabIndex = 1, ;
		Top = 9, ;
		Width = 106, ;
		Label1.Caption = "FileType", ;
		Label1.Name = "Label1", ;
		Label1.TabIndex = 19, ;
		Label1.Width = 95, ;
		Command1.Name = "Command1", ;
		Command1.TabIndex = 20, ;
		Command1.Top = 321, ;
		Command2.Name = "Command2", ;
		Command2.TabIndex = 21, ;
		Command2.Top = 321, ;
		LINE1.Name = "LINE1", ;
		LINE1.Width = 95, ;
		LINE2.Height = 0, ;
		LINE2.Left = 5, ;
		LINE2.Name = "LINE2", ;
		LINE2.Top = 316, ;
		LINE2.Width = 95
		*< END OBJECT: ClassLib="gofishui.vcx" BaseClass="container" />

	ADD OBJECT 'Container1.containerFileType.chkASP' AS gf_filtercheckbox WITH ;
		Alignment = 0, ;
		BackStyle = 0, ;
		Caption = "ASP", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 59, ;
		Name = "chkASP", ;
		TabIndex = 16, ;
		Top = 191, ;
		Value = .T., ;
		Width = 37
		*< END OBJECT: ClassLib="gofishui.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Container1.containerFileType.chkDBC' AS gf_filtercheckbox WITH ;
		Alignment = 0, ;
		BackStyle = 0, ;
		Caption = "DBC", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 10, ;
		Name = "chkDBC", ;
		TabIndex = 7, ;
		Top = 136, ;
		Value = .T., ;
		Width = 38
		*< END OBJECT: ClassLib="gofishui.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Container1.containerFileType.chkFRX' AS gf_filtercheckbox WITH ;
		Alignment = 0, ;
		BackStyle = 0, ;
		Caption = "FRX", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 10, ;
		Name = "chkFRX", ;
		TabIndex = 3, ;
		Top = 62, ;
		Value = .T., ;
		Width = 37
		*< END OBJECT: ClassLib="gofishui.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Container1.containerFileType.chkH' AS gf_filtercheckbox WITH ;
		Alignment = 0, ;
		BackStyle = 0, ;
		Caption = ".h", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 61, ;
		Name = "chkH", ;
		TabIndex = 12, ;
		Tag = "h", ;
		Top = 100, ;
		Value = .T., ;
		Width = 28
		*< END OBJECT: ClassLib="gofishui.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Container1.containerFileType.ChkHTML' AS gf_filtercheckbox WITH ;
		Alignment = 0, ;
		BackStyle = 0, ;
		Caption = "HTML", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 59, ;
		Name = "ChkHTML", ;
		TabIndex = 13, ;
		Top = 134, ;
		Value = .T., ;
		Width = 44
		*< END OBJECT: ClassLib="gofishui.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Container1.containerFileType.chkini' AS gf_filtercheckbox WITH ;
		Alignment = 0, ;
		BackStyle = 0, ;
		Caption = "INI", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 61, ;
		Name = "chkini", ;
		TabIndex = 11, ;
		Top = 82, ;
		Value = .T., ;
		Width = 33
		*< END OBJECT: ClassLib="gofishui.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Container1.containerFileType.chkJava' AS gf_filtercheckbox WITH ;
		Alignment = 0, ;
		BackStyle = 0, ;
		Caption = "JAVA", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 59, ;
		Name = "chkJava", ;
		TabIndex = 17, ;
		Top = 210, ;
		Value = .T., ;
		Width = 43
		*< END OBJECT: ClassLib="gofishui.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Container1.containerFileType.chkJSP' AS gf_filtercheckbox WITH ;
		Alignment = 0, ;
		BackStyle = 0, ;
		Caption = "JSP", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 59, ;
		Name = "chkJSP", ;
		TabIndex = 18, ;
		Top = 229, ;
		Value = .T., ;
		Width = 35
		*< END OBJECT: ClassLib="gofishui.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Container1.containerFileType.chkLBX' AS gf_filtercheckbox WITH ;
		Alignment = 0, ;
		BackStyle = 0, ;
		Caption = "LBX", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 10, ;
		Name = "chkLBX", ;
		TabIndex = 4, ;
		Top = 80, ;
		Value = .T., ;
		Width = 35
		*< END OBJECT: ClassLib="gofishui.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Container1.containerFileType.chkMNX' AS gf_filtercheckbox WITH ;
		Alignment = 0, ;
		BackStyle = 0, ;
		Caption = "MNX", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 10, ;
		Name = "chkMNX", ;
		TabIndex = 5, ;
		Top = 98, ;
		Value = .T., ;
		Width = 39
		*< END OBJECT: ClassLib="gofishui.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Container1.containerFileType.chkMPR' AS gf_filtercheckbox WITH ;
		Alignment = 0, ;
		BackStyle = 0, ;
		Caption = "MPR", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 61, ;
		Name = "chkMPR", ;
		TabIndex = 9, ;
		Top = 44, ;
		Value = .T., ;
		Width = 39
		*< END OBJECT: ClassLib="gofishui.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Container1.containerFileType.chkPJX' AS gf_filtercheckbox WITH ;
		Alignment = 0, ;
		BackStyle = 0, ;
		Caption = "PJX", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 10, ;
		Name = "chkPJX", ;
		TabIndex = 6, ;
		Top = 117, ;
		Value = .T., ;
		Width = 35
		*< END OBJECT: ClassLib="gofishui.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Container1.containerFileType.chkPRG' AS gf_filtercheckbox WITH ;
		Alignment = 0, ;
		BackStyle = 0, ;
		Caption = "PRG", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 61, ;
		Name = "chkPRG", ;
		TabIndex = 8, ;
		Top = 25, ;
		Value = .T., ;
		Width = 38
		*< END OBJECT: ClassLib="gofishui.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Container1.containerFileType.chkSCX' AS gf_filtercheckbox WITH ;
		Alignment = 0, ;
		BackStyle = 0, ;
		Caption = "SCX", ;
		ControlSource = "", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 10, ;
		Name = "chkSCX", ;
		TabIndex = 1, ;
		Top = 24, ;
		Value = .T., ;
		Width = 37
		*< END OBJECT: ClassLib="gofishui.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Container1.containerFileType.chkSPR' AS gf_filtercheckbox WITH ;
		Alignment = 0, ;
		BackStyle = 0, ;
		Caption = "SPR", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 61, ;
		Name = "chkSPR", ;
		TabIndex = 10, ;
		Top = 63, ;
		Value = .T., ;
		Width = 37
		*< END OBJECT: ClassLib="gofishui.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Container1.containerFileType.chkTXT' AS gf_filtercheckbox WITH ;
		Alignment = 0, ;
		BackStyle = 0, ;
		Caption = "TXT", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 59, ;
		Name = "chkTXT", ;
		TabIndex = 15, ;
		Top = 172, ;
		Value = .T., ;
		Width = 36
		*< END OBJECT: ClassLib="gofishui.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Container1.containerFileType.chkVCX' AS gf_filtercheckbox WITH ;
		Alignment = 0, ;
		BackStyle = 0, ;
		Caption = "VCX", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 10, ;
		Name = "chkVCX", ;
		TabIndex = 2, ;
		Top = 43, ;
		Value = .T., ;
		Width = 37
		*< END OBJECT: ClassLib="gofishui.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Container1.containerFileType.chkXML' AS gf_filtercheckbox WITH ;
		Alignment = 0, ;
		BackStyle = 0, ;
		Caption = "XML", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 59, ;
		Name = "chkXML", ;
		TabIndex = 14, ;
		Top = 153, ;
		Value = .T., ;
		Width = 37
		*< END OBJECT: ClassLib="gofishui.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Container1.containerMatchedLine' AS gf_textboxcontainer WITH ;
		BorderColor = 200,200,200, ;
		Height = 77, ;
		Left = 368, ;
		Name = "containerMatchedLine", ;
		TabIndex = 3, ;
		Top = 10, ;
		Visible = .T., ;
		Width = 253, ;
		Label1.Caption = "Matched Line", ;
		Label1.Name = "Label1", ;
		Label1.Tag = "matchline", ;
		Label1.Width = 242, ;
		Command1.Name = "Command1", ;
		Command1.Top = 53, ;
		Command2.Name = "Command2", ;
		Command2.Top = 53, ;
		LINE1.Name = "LINE1", ;
		LINE1.Width = 242, ;
		LINE2.Name = "LINE2", ;
		LINE2.Top = 49, ;
		LINE2.Width = 241, ;
		txt1.Name = "txt1", ;
		txt1.Width = 241
		*< END OBJECT: ClassLib="gofishui.vcx" BaseClass="container" />

	ADD OBJECT 'Container1.containerMatchType' AS gf_filtercheckboxcontainer WITH ;
		BorderColor = 200,200,200, ;
		Height = 344, ;
		Left = 112, ;
		Name = "containerMatchType", ;
		TabIndex = 2, ;
		Top = 9, ;
		Visible = .T., ;
		Width = 250, ;
		Label1.Caption = "MatchType", ;
		Label1.Left = 69, ;
		Label1.Name = "Label1", ;
		Label1.TabIndex = 31, ;
		Label1.Top = 4, ;
		Label1.Width = 111, ;
		Command1.Left = 10, ;
		Command1.Name = "Command1", ;
		Command1.TabIndex = 29, ;
		Command1.Top = 321, ;
		Command2.Left = 46, ;
		Command2.Name = "Command2", ;
		Command2.TabIndex = 30, ;
		Command2.Top = 321, ;
		LINE1.Height = 0, ;
		LINE1.Left = 6, ;
		LINE1.Name = "LINE1", ;
		LINE1.Top = 20, ;
		LINE1.Width = 238, ;
		LINE2.Height = 0, ;
		LINE2.Left = 5, ;
		LINE2.Name = "LINE2", ;
		LINE2.Top = 313, ;
		LINE2.Width = 238
		*< END OBJECT: ClassLib="gofishui.vcx" BaseClass="container" />

	ADD OBJECT 'Container1.containerMatchType.Check1' AS gf_filtercheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "<Name>", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 9, ;
		Name = "Check1", ;
		TabIndex = 11, ;
		Top = 191, ;
		Value = .T., ;
		Width = 61
		*< END OBJECT: ClassLib="gofishui.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Container1.containerMatchType.Check10' AS gf_filtercheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "<Filename>", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 9, ;
		Name = "Check10", ;
		TabIndex = 1, ;
		Top = 23, ;
		Value = .T., ;
		Width = 76
		*< END OBJECT: ClassLib="gofishui.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Container1.containerMatchType.Check11' AS gf_filtercheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "<Class Def>", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 9, ;
		Name = "Check11", ;
		TabIndex = 2, ;
		Top = 40, ;
		Value = .T., ;
		Width = 79
		*< END OBJECT: ClassLib="gofishui.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Container1.containerMatchType.Check12' AS gf_filtercheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "<Method Def>", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 9, ;
		Name = "Check12", ;
		TabIndex = 3, ;
		Top = 57, ;
		Value = .T., ;
		Width = 90
		*< END OBJECT: ClassLib="gofishui.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Container1.containerMatchType.Check14' AS gf_filtercheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "<Function>", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 9, ;
		Name = "Check14", ;
		TabIndex = 5, ;
		Top = 90, ;
		Value = .T., ;
		Width = 75
		*< END OBJECT: ClassLib="gofishui.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Container1.containerMatchType.Check16' AS gf_filtercheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "<Method>", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 9, ;
		Name = "Check16", ;
		TabIndex = 6, ;
		Top = 107, ;
		Value = .T., ;
		Width = 70
		*< END OBJECT: ClassLib="gofishui.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Container1.containerMatchType.Check17' AS gf_filtercheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "<Baseclass>", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 9, ;
		Name = "Check17", ;
		TabIndex = 8, ;
		Top = 141, ;
		Value = .T., ;
		Width = 80
		*< END OBJECT: ClassLib="gofishui.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Container1.containerMatchType.Check18' AS gf_filtercheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "<Class>", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 9, ;
		Name = "Check18", ;
		TabIndex = 9, ;
		Top = 158, ;
		Value = .T., ;
		Width = 59
		*< END OBJECT: ClassLib="gofishui.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Container1.containerMatchType.Check19' AS gf_filtercheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "<Parent>", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 141, ;
		Name = "Check19", ;
		TabIndex = 13, ;
		Top = 23, ;
		Value = .T., ;
		Width = 66
		*< END OBJECT: ClassLib="gofishui.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Container1.containerMatchType.Check2' AS gf_filtercheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "<Comment>", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 141, ;
		Name = "Check2", ;
		TabIndex = 21, ;
		Top = 158, ;
		Value = .T., ;
		Width = 79
		*< END OBJECT: ClassLib="gofishui.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Container1.containerMatchType.Check20' AS gf_filtercheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "<Parent Class>", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 9, ;
		Name = "Check20", ;
		TabIndex = 10, ;
		Top = 175, ;
		Value = .T., ;
		Width = 94
		*< END OBJECT: ClassLib="gofishui.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Container1.containerMatchType.Check21' AS gf_filtercheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "<Procedure>", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 141, ;
		Name = "Check21", ;
		TabIndex = 14, ;
		Top = 40, ;
		Value = .T., ;
		Width = 83
		*< END OBJECT: ClassLib="gofishui.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Container1.containerMatchType.Check22' AS gf_filtercheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "<Property Desc>", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 141, ;
		Name = "Check22", ;
		TabIndex = 15, ;
		Top = 57, ;
		Value = .T., ;
		Width = 102
		*< END OBJECT: ClassLib="gofishui.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Container1.containerMatchType.Check23' AS gf_filtercheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "<FileDate>", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 141, ;
		Name = "Check23", ;
		TabIndex = 18, ;
		Top = 107, ;
		Value = .T., ;
		Width = 73
		*< END OBJECT: ClassLib="gofishui.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Container1.containerMatchType.Check24' AS gf_filtercheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "<TimeStamp>", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 141, ;
		Name = "Check24", ;
		TabIndex = 19, ;
		Top = 124, ;
		Value = .T., ;
		Width = 86
		*< END OBJECT: ClassLib="gofishui.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Container1.containerMatchType.Check3' AS gf_filtercheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "<Property Def>", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 9, ;
		Name = "Check3", ;
		TabIndex = 4, ;
		Top = 74, ;
		Value = .T., ;
		Width = 96
		*< END OBJECT: ClassLib="gofishui.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Container1.containerMatchType.Check4' AS gf_filtercheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "<Property Name>", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 141, ;
		Name = "Check4", ;
		TabIndex = 16, ;
		Top = 74, ;
		Value = .T., ;
		Width = 106
		*< END OBJECT: ClassLib="gofishui.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Container1.containerMatchType.Check5' AS gf_filtercheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "<Containing Class>", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 9, ;
		Name = "Check5", ;
		TabIndex = 12, ;
		Top = 208, ;
		Value = .T., ;
		Width = 113
		*< END OBJECT: ClassLib="gofishui.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Container1.containerMatchType.Check7' AS gf_filtercheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "<Property Value>", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 141, ;
		Name = "Check7", ;
		TabIndex = 17, ;
		Top = 90, ;
		Value = .T., ;
		Width = 105
		*< END OBJECT: ClassLib="gofishui.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Container1.containerMatchType.Check8' AS gf_filtercheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "<Method Desc>", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 9, ;
		Name = "Check8", ;
		TabIndex = 7, ;
		Top = 124, ;
		Value = .T., ;
		Width = 96
		*< END OBJECT: ClassLib="gofishui.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Container1.containerMatchType.Check9' AS gf_filtercheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "<Constant>", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 141, ;
		Name = "Check9", ;
		TabIndex = 20, ;
		Top = 141, ;
		Value = .T., ;
		Width = 78
		*< END OBJECT: ClassLib="gofishui.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Container1.containerMatchType.Gf_filtercheckbox1' AS gf_filtercheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "Code", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 141, ;
		Name = "Gf_filtercheckbox1", ;
		TabIndex = 22, ;
		Top = 176, ;
		Value = .T., ;
		Width = 43
		*< END OBJECT: ClassLib="gofishui.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Container1.containerMatchType.Gf_filtercheckbox2' AS gf_filtercheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "<Expr>", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 10, ;
		Name = "Gf_filtercheckbox2", ;
		TabIndex = 23, ;
		Top = 277, ;
		Value = .T., ;
		Width = 56
		*< END OBJECT: ClassLib="gofishui.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Container1.containerMatchType.Gf_filtercheckbox3' AS gf_filtercheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "<SupExpr>", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 174, ;
		Name = "Gf_filtercheckbox3", ;
		TabIndex = 28, ;
		Top = 293, ;
		Value = .T., ;
		Width = 74
		*< END OBJECT: ClassLib="gofishui.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Container1.containerMatchType.Gf_filtercheckbox4' AS gf_filtercheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "<Name>", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 10, ;
		Name = "Gf_filtercheckbox4", ;
		TabIndex = 26, ;
		Top = 294, ;
		Value = .T., ;
		Width = 61
		*< END OBJECT: ClassLib="gofishui.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Container1.containerMatchType.Gf_filtercheckbox5' AS gf_filtercheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "<Tag>", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 99, ;
		Name = "Gf_filtercheckbox5", ;
		TabIndex = 24, ;
		Top = 276, ;
		Value = .T., ;
		Width = 52
		*< END OBJECT: ClassLib="gofishui.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Container1.containerMatchType.Gf_filtercheckbox6' AS gf_filtercheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "<Tag2>", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 99, ;
		Name = "Gf_filtercheckbox6", ;
		TabIndex = 27, ;
		Top = 293, ;
		Value = .T., ;
		Width = 58
		*< END OBJECT: ClassLib="gofishui.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Container1.containerMatchType.Gf_filtercheckbox7' AS gf_filtercheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "<Picture>", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 175, ;
		Name = "Gf_filtercheckbox7", ;
		TabIndex = 25, ;
		Top = 276, ;
		Value = .T., ;
		Width = 67
		*< END OBJECT: ClassLib="gofishui.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Container1.containerMatchType.Label2' AS label WITH ;
		Caption = "Reports", ;
		Height = 22, ;
		Left = 8, ;
		Name = "Label2", ;
		TabIndex = 32, ;
		Top = 256, ;
		Width = 123
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Container1.containerMatchType.Line3' AS line WITH ;
		BorderColor = 192,192,192, ;
		Height = 0, ;
		Left = 8, ;
		Name = "Line3", ;
		Top = 271, ;
		Width = 233
		*< END OBJECT: BaseClass="line" />

	ADD OBJECT 'Container1.containerMethodName' AS gf_textboxcontainer WITH ;
		BorderColor = 200,200,200, ;
		Height = 80, ;
		Left = 369, ;
		Name = "containerMethodName", ;
		TabIndex = 7, ;
		Top = 95, ;
		Visible = .T., ;
		Width = 124, ;
		Label1.Caption = "Class", ;
		Label1.Name = "Label1", ;
		Label1.Width = 113, ;
		Command1.Name = "Command1", ;
		Command1.Top = 56, ;
		Command2.Name = "Command2", ;
		Command2.Top = 56, ;
		LINE1.Name = "LINE1", ;
		LINE1.Width = 113, ;
		LINE2.Name = "LINE2", ;
		LINE2.Top = 52, ;
		LINE2.Width = 112, ;
		txt1.Name = "txt1", ;
		txt1.Width = 112
		*< END OBJECT: ClassLib="gofishui.vcx" BaseClass="container" />

	ADD OBJECT 'Container1.containerObjectName' AS gf_textboxcontainer WITH ;
		BorderColor = 200,200,200, ;
		Height = 77, ;
		Left = 367, ;
		Name = "containerObjectName", ;
		TabIndex = 11, ;
		Top = 278, ;
		Visible = .T., ;
		Width = 124, ;
		Label1.Caption = "Name", ;
		Label1.Name = "Label1", ;
		Label1.Width = 113, ;
		Command1.Name = "Command1", ;
		Command1.Top = 52, ;
		Command2.Name = "Command2", ;
		Command2.Top = 52, ;
		LINE1.Name = "LINE1", ;
		LINE1.Width = 113, ;
		LINE2.Name = "LINE2", ;
		LINE2.Top = 48, ;
		LINE2.Width = 112, ;
		txt1.Name = "txt1", ;
		txt1.Width = 112
		*< END OBJECT: ClassLib="gofishui.vcx" BaseClass="container" />

	ADD OBJECT 'Container1.containerTimestamp' AS gf_timestampcontainer WITH ;
		BorderColor = 200,200,200, ;
		Height = 59, ;
		Left = 624, ;
		Name = "containerTimestamp", ;
		TabIndex = 6, ;
		Top = 194, ;
		Visible = .T., ;
		Width = 251, ;
		Label1.Caption = "TimeStamp", ;
		Label1.Left = 266, ;
		Label1.Name = "Label1", ;
		Label1.Top = 3, ;
		Label1.Width = 76, ;
		Command1.Left = 159, ;
		Command1.Name = "Command1", ;
		Command1.Top = 24, ;
		Command2.Left = 106, ;
		Command2.Name = "Command2", ;
		Command2.Top = 1, ;
		Command2.Visible = .T., ;
		LINE1.Left = 6, ;
		LINE1.Name = "LINE1", ;
		LINE1.Top = 22, ;
		LINE1.Width = 211, ;
		LINE2.Left = 5, ;
		LINE2.Name = "LINE2", ;
		LINE2.Top = 74, ;
		LINE2.Width = 210, ;
		chkTimeStamp.Alignment = 0, ;
		chkTimeStamp.Caption = "TimeStamp", ;
		chkTimeStamp.ControlSource = "Filter", ;
		chkTimeStamp.Height = 17, ;
		chkTimeStamp.Left = 30, ;
		chkTimeStamp.Name = "chkTimeStamp", ;
		chkTimeStamp.Tag = "Filter", ;
		chkTimeStamp.Top = 2, ;
		chkTimeStamp.Width = 71, ;
		Label11.Left = 3, ;
		Label11.Name = "Label11", ;
		Label11.Top = 31, ;
		Label12.Left = 126, ;
		Label12.Name = "Label12", ;
		Label12.Top = 31, ;
		txtTimeStampFrom.ControlSource = "Timestamp_FilterFrom", ;
		txtTimeStampFrom.Height = 23, ;
		txtTimeStampFrom.Left = 28, ;
		txtTimeStampFrom.Name = "txtTimeStampFrom", ;
		txtTimeStampFrom.Top = 26, ;
		txtTimeStampFrom.Width = 88, ;
		txtTimeStampTo.ControlSource = "Timestamp_FilterTo", ;
		txtTimeStampTo.Height = 23, ;
		txtTimeStampTo.Left = 150, ;
		txtTimeStampTo.Name = "txtTimeStampTo", ;
		txtTimeStampTo.Top = 26, ;
		txtTimeStampTo.Width = 88
		*< END OBJECT: ClassLib="gofishui.vcx" BaseClass="container" />

	ADD OBJECT 'Container1.Gf_textboxcontainer1' AS gf_textboxcontainer WITH ;
		BorderColor = 200,200,200, ;
		Height = 77, ;
		Left = 626, ;
		Name = "Gf_textboxcontainer1", ;
		TabIndex = 3, ;
		Top = 10, ;
		Visible = .T., ;
		Width = 253, ;
		Label1.Caption = "Procedure", ;
		Label1.Name = "Label1", ;
		Label1.Tag = "ProcCode", ;
		Label1.Width = 242, ;
		Command1.Name = "Command1", ;
		Command1.Top = 53, ;
		Command2.Name = "Command2", ;
		Command2.Top = 53, ;
		Line1.Name = "Line1", ;
		Line1.Width = 242, ;
		Line2.Name = "Line2", ;
		Line2.Top = 49, ;
		Line2.Width = 241, ;
		txt1.Name = "txt1", ;
		txt1.Width = 241
		*< END OBJECT: ClassLib="gofishui.vcx" BaseClass="container" />

	ADD OBJECT 'Container1.Textboxcontainer1' AS gf_textboxcontainer WITH ;
		BorderColor = 200,200,200, ;
		Height = 80, ;
		Left = 624, ;
		Name = "Textboxcontainer1", ;
		TabIndex = 10, ;
		Top = 95, ;
		Visible = .T., ;
		Width = 122, ;
		Label1.Caption = "Baseclass", ;
		Label1.Height = 17, ;
		Label1.Left = 7, ;
		Label1.Name = "Label1", ;
		Label1.Top = 4, ;
		Label1.Width = 110, ;
		Command1.Name = "Command1", ;
		Command1.Top = 55, ;
		Command2.Name = "Command2", ;
		Command2.Top = 55, ;
		LINE1.Height = 0, ;
		LINE1.Left = 6, ;
		LINE1.Name = "LINE1", ;
		LINE1.Top = 20, ;
		LINE1.Width = 109, ;
		LINE2.Height = 0, ;
		LINE2.Left = 5, ;
		LINE2.Name = "LINE2", ;
		LINE2.Top = 51, ;
		LINE2.Width = 110, ;
		txt1.Height = 23, ;
		txt1.Left = 7, ;
		txt1.Name = "txt1", ;
		txt1.Top = 26, ;
		txt1.Width = 108
		*< END OBJECT: ClassLib="gofishui.vcx" BaseClass="container" />

	ADD OBJECT 'Container1.Textboxcontainer2' AS gf_textboxcontainer WITH ;
		BorderColor = 200,200,200, ;
		Height = 80, ;
		Left = 497, ;
		Name = "Textboxcontainer2", ;
		TabIndex = 9, ;
		Top = 95, ;
		Width = 124, ;
		Label1.Caption = "Parent Class", ;
		Label1.Name = "Label1", ;
		Label1.Width = 113, ;
		Command1.Name = "Command1", ;
		Command1.Top = 56, ;
		Command2.Name = "Command2", ;
		Command2.Top = 56, ;
		LINE1.Name = "LINE1", ;
		LINE1.Width = 113, ;
		LINE2.Name = "LINE2", ;
		LINE2.Top = 52, ;
		LINE2.Width = 112, ;
		txt1.Name = "txt1", ;
		txt1.Width = 112
		*< END OBJECT: ClassLib="gofishui.vcx" BaseClass="container" />

	ADD OBJECT 'Container1.Textboxcontainer3' AS gf_textboxcontainer WITH ;
		BorderColor = 200,200,200, ;
		Height = 77, ;
		Left = 497, ;
		Name = "Textboxcontainer3", ;
		TabIndex = 12, ;
		Top = 277, ;
		Visible = .T., ;
		Width = 124, ;
		Label1.Caption = "Method Name", ;
		Label1.Name = "Label1", ;
		Label1.Width = 113, ;
		Command1.Name = "Command1", ;
		Command1.Top = 53, ;
		Command2.Name = "Command2", ;
		Command2.Top = 53, ;
		LINE1.Name = "LINE1", ;
		LINE1.Width = 113, ;
		LINE2.Name = "LINE2", ;
		LINE2.Top = 49, ;
		LINE2.Width = 112, ;
		txt1.Name = "txt1", ;
		txt1.Width = 112
		*< END OBJECT: ClassLib="gofishui.vcx" BaseClass="container" />

	ADD OBJECT 'Label4' AS label WITH ;
		AutoSize = .T., ;
		BackColor = 240,240,240, ;
		BackStyle = 1, ;
		Caption = "  Within textboxes  ", ;
		Height = 17, ;
		Left = 724, ;
		Name = "Label4", ;
		TabIndex = 14, ;
		Top = 264, ;
		Width = 102, ;
		ZOrderSet = 7
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Line1' AS line WITH ;
		Height = 0, ;
		Left = 0, ;
		Name = "Line1", ;
		Top = 360, ;
		Width = 910
		*< END OBJECT: BaseClass="line" />

	ADD OBJECT 'Shape1' AS shape WITH ;
		BackStyle = 0, ;
		Curvature = 3, ;
		Height = 77, ;
		Left = 684, ;
		Name = "Shape1", ;
		Top = 271, ;
		Width = 181, ;
		ZOrderSet = 1
		*< END OBJECT: BaseClass="shape" />
	
	PROCEDURE applychanges
		This.SaveFilterSettings(This.cFilterOptionsXMLFile)
		
		
	ENDPROC

	PROCEDURE bind
		Lparameters toContainer
		
		lcControlSourceRoot = 'Thisform.oFilter.'
		
		For each control in toContainer.Controls
			If PemStatus(control, 'ControlSource', 5) and !Empty(control.ControlSource)
				control.ControlSource = lcControlSourceRoot + control.ControlSource
			EndIf
		EndFor
		
	ENDPROC

	PROCEDURE buildcheckboxfilter
		Lparameters toContainer, tcFilterObjectProperty, tcSeparator
		
		Local lcCondition, lcExistingString, lcField, lcFilter, lcFilterObjectProperty, lcNewString, lcValue
		
		lnSelect = Select()
		Select (Thisform.oForm.cSearchResultsAlias)
		
		lcField = Getwordnum(tcFilterObjectProperty, 1, '_')
		lcValue = Getwordnum(tcFilterObjectProperty, 2, '_')
		
		lcFilterObjectProperty = 'Thisform.oFilter.' + tcFilterObjectProperty
		lcFilterObjectProperty = Strtran(lcFilterObjectProperty, '<', '')
		lcFilterObjectProperty = Strtran(lcFilterObjectProperty, '>', '')
		lcFilterObjectProperty = Strtran(lcFilterObjectProperty, ' ', '')
		
		lcNewString = ''
		
		If Empty(tcSeparator)
			tcSeparator = 'or'
		Endif
		
		lcExistingString = toContainer.cFilter
		
		If !Empty(lcExistingString)
			lcNewString = lcExistingString + ' ' + tcSeparator + ' '
		Endif
		
		*lcCondition = 'Alltrim(Upper(' + lcField + ')) == [' + Alltrim(Upper(lcValue)) + ']'
		
		lcCondition = 'Alltrim(' + lcField + ')==[' + Alltrim(lcValue) + ']'
		
		*-- Determine if passed value is present in column of search resutls.
		*-- If not, then disable control since, well, there are none, 
		Locate For &lcCondition
		
		If !Found()
			This.EnableControl(toContainer, lcValue, .F.)
		Else
			This.EnableControl(toContainer, lcValue, .T.)
		Endif
		
		
		*-- Add this filter to the filter string if the property is selected, and the value exists
		Try && Could fail if we matched on the (alternate) Tag value, which is fine.
			If Eval(lcFilterObjectProperty)&& And Found()
				lcFilter = lcNewString + lcCondition
				toContainer.cFilter = lcFilter
			Endif
		Catch
		Endtry
		
		Select (lnSelect)
		
	ENDPROC

	PROCEDURE buildcontainerfilters
		Lparameters toContainer
		
		Local lcField, lcFilterObjectProperty, lcValue, loControl
		
		Do Case
		
			Case Upper(toContainer.Class) = 'GF_FILTERCHECKBOXCONTAINER'
				For Each loControl in toContainer.Controls
					
					*==== CHECKBOXES =================================================
					If Upper(loControl.baseclass) = 'CHECKBOX'
						lcFilterObjectProperty = GetWordNum(loControl.ControlSource, 3, '.')
		
						If Upper(toContainer.name) <> 'CONTAINERMATCHTYPE'
							This.BuildCheckBoxFilter(toContainer, lcFilterObjectProperty)
						Endif
		
						*-- Optionally work with Tag value if ControlSource did not match up with any values in the table
						*If (loControl.Enabled = .f. or '<' $ loControl.tag) and !Empty(loControl.Tag)  && Tag could hold an alternate match in the column
						If !Empty(loControl.Tag)  && Tag could hold an alternate match in the column
							lcField = GetWordNum(lcFilterObjectProperty, 1, '_')
							lcValue = '_' + loControl.tag
							This.BuildCheckBoxFilter(toContainer, lcField + lcValue)
						Endif
						
					EndIf
			EndFor
			
			Case Upper(toContainer.Class) = 'GF_TEXTBOXCONTAINER'
						loControl = toContainer.txt1
						lcFilterObjectProperty = GetWordNum(loControl.ControlSource, 3, '.')
						lcFieldInTable = GetWordNum(lcFilterObjectProperty, 1, '_')&& Need to chop off the '_Filter' part of the ControlSource
						lcValue = Alltrim(loControl.Value)
						This.BuildTextboxFilter(toContainer, lcFieldInTable, lcValue)
				
			Case Upper(toContainer.Class) = 'GF_TIMESTAMPCONTAINER'
					lcFilter = ''
					ldFromDate = Thisform.oFilter.Timestamp_FilterFrom
					ldToDate = Thisform.oFilter.Timestamp_FilterTo
		
					If !Empty(toContainer.chkTimeStamp.value)
						lcFromDate = Transform(dtos(ldFromDate), '@R {^####/##/##') + '}'
						lcToDate = Transform(dtos(ldToDate), '@R {^####/##/##') + '}'
		
						Do Case
							Case Empty(ldFromDate) and Empty(ldToDate)
								*-- Do Nothing
							Case Empty(ldFromDate)
								lcFilter = 'TimeStamp <= ' + lcToDate
							Case Empty(ldToDate)
								lcFilter = 'TimeStamp >= ' + lcFromDate
							Otherwise
								lcFilter = 'TimeStamp >= ' + lcFromDate + ' and TimeStamp <= ' + lcToDate
						Endcase
		
						toContainer.cFilter = lcFilter
		
					EndIf
		
		Endcase
		
		
		
		 
		
		
		     
	ENDPROC

	PROCEDURE buildfilterstring
		Local lcAnd, lcFilter, loContainer
		
		lcFilter = ''
		lcAnd = ''
		
		For Each loControl in Thisform.Container1.Controls
			If Upper(loControl.baseclass) = 'CONTAINER'
				loControl.cFilter = ''
				This.BuildContainerFilters(loControl)
				If !Empty(loControl.cFilter)
					lcFilter = lcFilter + lcAnd + '(' + loControl.cFilter + ')'
					lcAnd = ' and '
				EndIf		
			EndIf
		EndFor
		This.cFilter = lcFilter	
		  
	ENDPROC

	PROCEDURE buildtextboxfilter
		Lparameters toContainer, tcField, tcValue
		
		Local lcFilter, llLike, llNot
		
		tcValue = Alltrim(Upper(tcValue))
		
		If Left(tcValue, 1) = '!' and Thisform.oFilter.FilterNot
		 tcValue = Substr(tcValue, 2)
		 llNot = .t.
		EndIf
		
		tcValue = Alltrim(Upper(tcValue))
		
		If ('*' $ tcValue or '?' $ tcValue) and Thisform.oFilter.FilterLike
			tcValue = '*' + tcValue + '*'
			llLike = .t.
		Endif
		
		
		If !Empty(tcValue)
		
			If llLike = .t.
				lcFilter = 'Like([' + tcValue + '], Alltrim(Upper(' + tcField + ')))'
			Else
				lcFilter = '[' + tcValue + '] $ Alltrim(Upper(' + tcField + '))'
			EndIf
			
			If llNot
				lcFilter = '!(' + lcFilter + ')'
			Endif
			
		Else
			lcFilter = ''
		Endif
		
		toContainer.cFilter = lcFilter
		
		  
	ENDPROC

	PROCEDURE Destroy
		DoDefault()
		
		This.BuildFilterString()
		
		This.oFilter = .null.
		
		
	ENDPROC

	PROCEDURE enablecontrol
		Lparameters toContainer, tcCaption, tlEnabled
		
		*-- Looks for a Checkbox within the passed Container, based on the the Caption.
		*-- If found, sets Enabled status to tlEnabed.
		
		Local lcContainer, loControl
		
		For each loControl in toContainer.Controls
			If Upper(loControl.baseclass) = 'CHECKBOX'
				lcTag = Alltrim(Upper(loControl.Tag))
				lcCaption = Alltrim(Upper(Strtran(loControl.caption, '.', '')))	  && To handle .h caption on FileType container
				tcCaption = Alltrim(Upper(tcCaption))
		
				If tcCaption = lcCaption or (lcTag = tcCaption and !Empty(lcTag))
					*loControl.Enabled = tlEnabled
					
					If tlEnabled = .t.
						loControl.Forecolor = Rgb(0,0,0)
						*loControl.FontBold = .t.
					Else
						loControl.Forecolor = Rgb(180,180,180)
						*loControl.FontBold = .f.
					Endif
					
				EndIf
				
				If !loControl.Enabled
					*loControl.Value = 0
				EndIf
					
			EndIf
		EndFor
		
		
		
		
		
		
		   
	ENDPROC

	PROCEDURE Init
		Lparameters toForm, toFilter
		
		This.MaxHeight = This.Height
		This.MaxWidth = This.Width
		
		DoDefault(toForm)
		
		If Vartype(toFilter) = 'O'
			*-- oFilter should already loaded up with values.
			Thisform.oFilter = toFilter
		Else
			This.oFilter = CreateObject(this.cFilterOptionsClass)
			This.oFilter.LoadFromFile(this.cFilterOptionsXMLFile)
			*Thisform.LoadFilterSettings(this.cFilterOptionsXMLFile)
		EndIf
		
		*-- XML file stores DateTime, so need to convert to just Date
		With Thisform.oFilter
			If Vartype(.Timestamp_FilterFrom) = 'T'
				.Timestamp_FilterFrom = Ttod(.Timestamp_FilterFrom)
			Endif
			If Vartype(.Timestamp_FilterTo) = 'T'
				.Timestamp_FilterTo = Ttod(.Timestamp_FilterTo)
			Endif
		Endwith
		
		*-- Bind up controls to an empty class instance so form can set up
		For Each loControl in This.Container1.Controls
			If Upper(loControl.baseclass) = 'CONTAINER'
				This.Bind(loControl)
			EndIf
		EndFor
		
		Thisform.BuildFilterString() && Call this to handle disabling of checkboxes
		
		Thisform.Refresh()
		
		
	ENDPROC

	PROCEDURE loadfiltersettings		&& Loads saved settings from XML file.
		Lparameters tcFile
		
		Local loMy as 'My' OF 'My.vcx'
		Local laProperties[1], lcProperty
		
		If !File(tcFile)
			Return
		EndIf
		
		loMy = Newobject('My', 'My.vcx')
		AMembers(laProperties, This.oFilter, 0, 'U')
		loMy.Settings.Load(tcFile)
		
		With loMy.Settings
		 
		 For x = 1 to Alen(laProperties)
		 	lcProperty = laProperties[x]
			Try
			 	Store Evaluate('.' + lcProperty) to ('This.oFilter.' + lcProperty)
			Catch
			EndTry
		 Endfor
		
		Endwith
		
		
		
	ENDPROC

	PROCEDURE loadformsettings
		This.MinWidth = this.Width
		This.MinHeight = This.Height
		
		DoDefault()
		
		
	ENDPROC

	PROCEDURE QueryUnload
		thisform.llReturn = .f.
	ENDPROC

	PROCEDURE savefiltersettings
		Lparameters tcFile
		 
		Local loMy as 'My' OF 'My.vcx'
		Local laProperties[1], lcProperty
		
		loMy = Newobject('My', 'My.vcx')
		
		AMembers(laProperties, This.oFilter, 0, 'U')
		
		With loMy.Settings
		 
		 For x = 1 to Alen(laProperties)
		 	lcProperty = laProperties[x]
		 	If !lcProperty = '_MEMBERDATA'
			 	.Add(lcProperty, Evaluate('This.oFilter.' + lcProperty))
			EndIf
		 Endfor
		
		.Save(tcFile)
		
		Endwith
		  
	ENDPROC

	PROCEDURE Unload
		If Thisform.llReturn = .t.
			Return Thisform.cFilter
		Else
			Return .null.
		Endif
		
		 
	ENDPROC

	PROCEDURE cmdOK.Click
		Thisform.llReturn = .t.
		
		ThisForm.ApplyChanges()
		
		Thisform.Release()
		
		 
	ENDPROC

	PROCEDURE Command2.Click
		Thisform.Release()
		
		 
	ENDPROC

	PROCEDURE Command3.Click
		For Each loContainer in Thisform.Container1.Controls
			loContainer.Clear()
		Endfor
		
		Thisform.container1.containerMatchedLine.txt1.SetFocus()
	ENDPROC

	PROCEDURE Container1.containerMatchType.Check1.Init
		This.Caption = MATCHTYPE_NAME
	ENDPROC

	PROCEDURE Container1.containerMatchType.Check10.Init
		This.Caption = MATCHTYPE_FILENAME
	ENDPROC

	PROCEDURE Container1.containerMatchType.Check11.Init
		This.Caption = MATCHTYPE_CLASS_DEF
	ENDPROC

	PROCEDURE Container1.containerMatchType.Check12.Init
		This.Caption = MATCHTYPE_METHOD_DEF
	ENDPROC

	PROCEDURE Container1.containerMatchType.Check16.Init
		This.Caption = MATCHTYPE_METHOD
	ENDPROC

	PROCEDURE Container1.containerMatchType.Check17.Init
		This.Caption = MATCHTYPE_BASECLASS
		
		
		 
	ENDPROC

	PROCEDURE Container1.containerMatchType.Check18.Init
		This.Caption = MATCHTYPE_CLASS
	ENDPROC

	PROCEDURE Container1.containerMatchType.Check2.Init
		This.Caption = MATCHTYPE_COMMENT
	ENDPROC

	PROCEDURE Container1.containerMatchType.Check20.Init
		This.Caption = MATCHTYPE_PARENTCLASS
	ENDPROC

	PROCEDURE Container1.containerMatchType.Check22.Init
		This.Caption = MATCHTYPE_PROPERTY_DESC
	ENDPROC

	PROCEDURE Container1.containerMatchType.Check23.Init
		This.Caption = MATCHTYPE_FILEDATE
		
	ENDPROC

	PROCEDURE Container1.containerMatchType.Check24.Init
		This.Caption = MATCHTYPE_TIMESTAMP
		
	ENDPROC

	PROCEDURE Container1.containerMatchType.Check3.Init
		This.Caption = MATCHTYPE_PROPERTY_DEF
	ENDPROC

	PROCEDURE Container1.containerMatchType.Check4.Init
		This.Caption = MATCHTYPE_PROPERTY_NAME
	ENDPROC

	PROCEDURE Container1.containerMatchType.Check5.Init
		This.Caption = MATCHTYPE_CONTAINING_CLASS
	ENDPROC

	PROCEDURE Container1.containerMatchType.Check7.Init
		This.Caption = MATCHTYPE_PROPERTY_VALUE
	ENDPROC

	PROCEDURE Container1.containerMatchType.Check8.Init
		This.Caption = MATCHTYPE_METHOD_DESC
	ENDPROC

	PROCEDURE Container1.containerMatchType.Check9.Init
		This.Caption = MATCHTYPE_CONSTANT
		
	ENDPROC

	PROCEDURE Container1.containerMatchType.Gf_filtercheckbox1.Init
		This.Caption = MATCHTYPE_CODE
	ENDPROC

	PROCEDURE Container1.containerMatchType.Gf_filtercheckbox2.Init
		This.Caption = MATCHTYPE_FRX_EXPR
	ENDPROC

	PROCEDURE Container1.containerMatchType.Gf_filtercheckbox3.Init
		This.Caption = MATCHTYPE_FRX_SUPEXPR
	ENDPROC

	PROCEDURE Container1.containerMatchType.Gf_filtercheckbox4.Init
		This.Caption = MATCHTYPE_FRX_NAME
	ENDPROC

	PROCEDURE Container1.containerMatchType.Gf_filtercheckbox5.Init
		This.Caption = MATCHTYPE_FRX_TAG
	ENDPROC

	PROCEDURE Container1.containerMatchType.Gf_filtercheckbox6.Init
		This.Caption = MATCHTYPE_FRX_TAG2
	ENDPROC

	PROCEDURE Container1.containerMatchType.Gf_filtercheckbox7.Init
		This.Caption = MATCHTYPE_FRX_PICTURE
	ENDPROC

	PROCEDURE Container1.containerMatchType.Init
		
		DoDefault()
		
		For Each loControl in This.Controls
			If Upper(loControl.baseclass) = 'CHECKBOX'
				loControl.Tag = loControl.Caption	
			Endif
		EndFor
		
		
	ENDPROC

ENDDEFINE

DEFINE CLASS gf_filtersinglecheckboxcontainer AS container 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="chkApplyFilter" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: clear		&& Clears the contents of a ComboBox or ListBox control.
		*m: cleardecoration
		*m: decorate
		*m: ldecorated_assign
		*m: setallcheckboxes
		*m: shouldbedecorated
		*p: cfilter
		*p: ldecorated
		*p: ncheckboxcount
		*p: _memberdata		&& XML Metadata for customizable properties
	*</DefinedPropArrayMethod>

	*<PropValue>
		BorderColor = 150,150,150
		cfilter = 
		Height = 25
		ldecorated = .F.
		Name = "gf_filtersinglecheckboxcontainer"
		ncheckboxcount = 0
		Width = 218
		_memberdata = <VFPData>
			<memberdata name="setallcheckboxes" display="SetAllCheckBoxes"/>
			<memberdata name="cfilter" display="cFilter"/>
			<memberdata name="ncheckboxcount" display="nCheckBoxCount"/>
			<memberdata name="bordercolor" display="BorderColor"/>
			<memberdata name="clear" display="Clear"/>
			<memberdata name="decorate" display="Decorate"/>
			<memberdata name="cleardecoration" display="ClearDecoration"/>
			<memberdata name="ldecorated" display="lDecorated"/>
			<memberdata name="ldecorated_assign" display="lDecorated_Assign"/>
			<memberdata name="shouldbedecorated" display="ShouldBeDecorated"/>
		</VFPData>
	*</PropValue>

	ADD OBJECT 'chkApplyFilter' AS checkbox WITH ;
		Alignment = 0, ;
		Anchor = 0, ;
		AutoSize = .T., ;
		Caption = "Caption", ;
		ControlSource = "", ;
		FontBold = .F., ;
		FontItalic = .F., ;
		FontName = "Arial", ;
		FontSize = 9, ;
		Height = 17, ;
		Left = 10, ;
		Name = "chkApplyFilter", ;
		Picture = ..\images\, ;
		TabIndex = 7, ;
		Top = 4, ;
		Width = 61
		*< END OBJECT: BaseClass="checkbox" />
	
	PROCEDURE clear		&& Clears the contents of a ComboBox or ListBox control.
	ENDPROC

	PROCEDURE cleardecoration
		This.lDecorated = .F.
		
	ENDPROC

	PROCEDURE decorate
		This.lDecorated = .T.
	ENDPROC

	PROCEDURE ldecorated_assign
		Lparameters tlDecorated
		This.lDecorated = m.tlDecorated
		
		If m.tlDecorated
			This.BorderWidth	 = 2
			This.BorderColor	 = Rgb(255, 0, 0)
		Else
			This.BorderWidth	 = 1
			This.BorderColor	 = Rgb(175, 175, 175)
		Endif
		
		If Pemstatus(Thisform, 'DecoratePage', 5) And This.Parent.BaseClass = 'Page'
			Thisform.DecoratePage(This.Parent)
		Endif
	ENDPROC

	PROCEDURE Refresh
		This.ClearDecoration()
		
		If This.ShouldBeDecorated()
			This.Decorate()
		Endif
		
	ENDPROC

	PROCEDURE setallcheckboxes
	ENDPROC

	PROCEDURE shouldbedecorated
		Local loControl
		For Each m.loControl In This.Controls
			If Upper(m.loControl.BaseClass) = 'CHECKBOX' And Not Empty(m.loControl.Value)&& and loControl.Enabled
				Return .T.
				Exit
			Endif
		Endfor
		Return .F.
	ENDPROC

	PROCEDURE chkApplyFilter.Valid
		This.Parent.Refresh()
	ENDPROC

ENDDEFINE

DEFINE CLASS gf_grid AS grid 
 	*< CLASSDATA: Baseclass="grid" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*m: arrangecolumns
		*m: findcolumn
		*p: _memberdata		&& XML Metadata for customizable properties
	*</DefinedPropArrayMethod>

	*<PropValue>
		Height = 200
		Name = "gf_grid"
		Width = 320
		_memberdata = <VFPData>
			<memberdata name="arrangecolumns" display="ArrangeColumns"/>
			<memberdata name="findcolumn" display="FindColumn"/>
		</VFPData>
	*</PropValue>
	
	PROCEDURE arrangecolumns
		Local laColumns[1], lnColumnCount, lnI, loColumn
		
		lnColumnCount = This.ColumnCount
		
		Dimension laColumns[lnColumnCount, 4] 
		
		For lnI = 1 to lnColumnCount
			loColumn = This.Columns[lnI]
			laColumns[lnI, 1] = loColumn
			laColumns[lnI, 2] = loColumn.ColumnOrder
			laColumns[lnI, 3] = loColumn.Visible
			laColumns[lnI, 4] = loColumn.ControlSource
		EndFor
		
		Asort(laColumns, 2, -1, 0)
		Asort(laColumns, 3, -1, 1)
		
		For lnI = 1 to lnColumnCount
			loColumn = laColumns[lnI, 1]
			loColumn.ColumnOrder = lnI
		EndFor   
	ENDPROC

	PROCEDURE findcolumn
		Lparameters tcControlSource
		
		Local loColumn, lcControlSourceField
		
		For each loColumn in This.Columns
			lcControlSourceField = GetWordNum(loColumn.ControlSource, 2, '.')
			If Alltrim(Upper(lcControlSourceField)) == Alltrim(Upper(tcControlSource))
				Return loColumn
			Endif
		Endfor
		 
		
	ENDPROC

ENDDEFINE

DEFINE CLASS gf_progressbar AS container 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Image1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="box" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="bar" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="bar.Image1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label2" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: nvalue_assign
		*m: reset		&& Resets the Timer control so that it starts counting from 0.
		*m: start
		*m: stop
		*m: update
		*p: csetcursor
		*p: nmaxvalue
		*p: nvalue
		*p: _memberdata		&& XML Metadata for customizable properties
	*</DefinedPropArrayMethod>

	*<PropValue>
		BorderColor = 0,0,0
		csetcursor = 
		Height = 102
		Name = "gf_progressbar"
		nmaxvalue = 0
		nvalue = 0
		Width = 485
		_memberdata = <VFPData>
			<memberdata name="reset" display="Reset"/>
			<memberdata name="update" display="Update"/>
			<memberdata name="nvalue" display="nValue"/>
			<memberdata name="nmaxvalue" display="nMaxValue"/>
			<memberdata name="nvalue_assign" display="nValue_Assign"/>
			<memberdata name="start" display="Start"/>
			<memberdata name="csetcursor" display="cSetCursor"/>
			<memberdata name="stop" display="Stop"/>
		</VFPData>
	*</PropValue>

	ADD OBJECT 'bar' AS container WITH ;
		BackColor = 0,64,128, ;
		Height = 23, ;
		Left = 22, ;
		Name = "bar", ;
		Top = 45, ;
		Width = 228
		*< END OBJECT: BaseClass="container" />

	ADD OBJECT 'bar.Image1' AS image WITH ;
		Height = 50, ;
		Left = 0, ;
		Name = "Image1", ;
		Picture = ..\images\progressbar.bmp, ;
		RotateFlip = 0, ;
		Stretch = 2, ;
		Top = -22, ;
		Width = 1000
		*< END OBJECT: BaseClass="image" />

	ADD OBJECT 'box' AS container WITH ;
		BackColor = 128,128,128, ;
		BorderColor = 192,192,192, ;
		Height = 30, ;
		Left = 17, ;
		Name = "box", ;
		Top = 41, ;
		Width = 449
		*< END OBJECT: BaseClass="container" />

	ADD OBJECT 'Image1' AS image WITH ;
		Height = 100, ;
		Left = 1, ;
		Name = "Image1", ;
		Picture = ..\images\progressbarbackground.bmp, ;
		Stretch = 2, ;
		Top = 1, ;
		Width = 483
		*< END OBJECT: BaseClass="image" />

	ADD OBJECT 'Label1' AS label WITH ;
		BackStyle = 0, ;
		Caption = "Searching...", ;
		FontSize = 10, ;
		ForeColor = 255,255,255, ;
		Height = 23, ;
		Left = 17, ;
		Name = "Label1", ;
		Top = 8, ;
		Width = 163
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Label2' AS label WITH ;
		BackStyle = 0, ;
		Caption = "Press ESCAPE to cancel.", ;
		FontSize = 9, ;
		ForeColor = 255,255,255, ;
		Height = 22, ;
		Left = 18, ;
		Name = "Label2", ;
		Top = 79, ;
		Width = 284
		*< END OBJECT: BaseClass="label" />
	
	PROCEDURE nvalue_assign
		lparameters tnValue
		
		This.nValue = tnValue
		
		This.Update()
		
	ENDPROC

	PROCEDURE reset		&& Resets the Timer control so that it starts counting from 0.
		This.bar.Width = 0
		This.Refresh()
	ENDPROC

	PROCEDURE start
		Lparameters tnMaxValue
		
		Local lnMaxValue
		
		lnMaxValue = Evl(tnMaxValue, 1)
		
		*This.cSetCursor = Set('Cursor')
		
		*Set Cursor Off
		
		This.nMaxValue = lnMaxValue 
		This.nValue = 0
		This.Visible = .t.
		This.Update()
		
		 
	ENDPROC

	PROCEDURE stop
		Local lcSetCursor
		
		*lcSetCursor = This.cSetCursor
		
		This.Visible = .f.
		
		*Set Cursor &lcSetCursor
	ENDPROC

	PROCEDURE update
		Local lnMaxValue
		
		lnMaxValue = Iif(This.nMaxValue < 0, 1, This.nMaxValue)
		
		This.Bar.Width = Int((This.nValue / lnMaxValue) * This.Box.Width * .97)
		
		If This.Bar.Width > This.Box.Width - 10
			This.Bar.Width = This.Box.Width - 10
		Endif
		
		
		
	ENDPROC

	PROCEDURE bar.Init
		This.Width = 0
	ENDPROC

ENDDEFINE

DEFINE CLASS gf_resultsform AS formset 
 	*< CLASSDATA: Baseclass="formset" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Form1" UniqueID="" Timestamp="" />

	#INCLUDE "..\..\..\..\..\programs\9.0\common\common.h"
	*<PropValue>
		Name = "gf_resultsform"
	*</PropValue>

	ADD OBJECT 'Form1' AS form WITH ;
		Caption = "Form1", ;
		DoCreate = .T., ;
		Name = "Form1"
		*< END OBJECT: BaseClass="form" />

ENDDEFINE

DEFINE CLASS gf_textboxcontainer AS gf_filtercheckboxcontainer OF "gofishui.vcx" 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="txt1" UniqueID="" Timestamp="" />

	*<PropValue>
		Height = 390
		Name = "gf_textboxcontainer"
		_memberdata = <VFPData>
			<memberdata name="clear" display="Clear"/>
		</VFPData>
		Label1.Name = "Label1"
		Command1.Caption = "Clear"
		Command1.Height = 21
		Command1.Left = 10
		Command1.Name = "Command1"
		Command1.Top = 366
		Command1.Width = 43
		Command2.Left = 65
		Command2.Name = "Command2"
		Command2.Top = 366
		Command2.Visible = .F.
		LINE1.Name = "LINE1"
		LINE2.Name = "LINE2"
	*</PropValue>

	ADD OBJECT 'txt1' AS textbox WITH ;
		Anchor = 10, ;
		ControlSource = "", ;
		Height = 23, ;
		Left = 7, ;
		MaxLength = 255, ;
		Name = "txt1", ;
		Top = 26, ;
		Width = 206
		*< END OBJECT: BaseClass="textbox" />
	
	PROCEDURE clear
		this.txt1.Value = ''
		This.ClearDecoration()
	ENDPROC

	PROCEDURE decorate
		llDecorate = This.ShouldBeDecorated()
		
		This.ClearDecoration()
		
		If llDecorate
			DoDefault()
		EndIf
		
	ENDPROC

	PROCEDURE Init
		Local lcPrefix
		
		If !Empty(This.Label1.Tag) && Tag can override caption to set controlsource
			lcPrefix = Strtran(This.Label1.Tag, ' ', '')
		Else
			lcPrefix = Strtran(This.Label1.Caption, ' ', '')
		Endif
		
		This.txt1.ControlSource =  lcPrefix + '_Filter'
	ENDPROC

	PROCEDURE Refresh
		This.Decorate()
	ENDPROC

	PROCEDURE shouldbedecorated
		Return !Empty(this.txt1.Value)
	ENDPROC

	PROCEDURE Command1.Click
		This.Parent.txt1.Value = ''
		this.Parent.Refresh()
		This.Parent.txt1.SetFocus()
		
	ENDPROC

	PROCEDURE txt1.InteractiveChange
		This.parent.Decorate()
	ENDPROC

ENDDEFINE

DEFINE CLASS gf_timestampcontainer AS gf_filtercheckboxcontainer OF "gofishui.vcx" 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="chkTimeStamp" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label11" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label12" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtTimeStampFrom" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtTimeStampTo" UniqueID="" Timestamp="" />

	*<PropValue>
		Height = 111
		Name = "gf_timestampcontainer"
		Width = 206
		Label1.Height = 16
		Label1.Left = 137
		Label1.Name = "Label1"
		Label1.Top = 2
		Label1.Visible = .F.
		Label1.Width = 60
		Command1.Name = "Command1"
		Command1.Top = 88
		Command1.Visible = .F.
		Command2.Name = "Command2"
		Command2.Top = 88
		Command2.Visible = .F.
		LINE1.Name = "LINE1"
		LINE1.Width = 195
		LINE2.Name = "LINE2"
		LINE2.Top = 83
		LINE2.Visible = .F.
		LINE2.Width = 194
	*</PropValue>

	ADD OBJECT 'chkTimeStamp' AS checkbox WITH ;
		Alignment = 0, ;
		BackStyle = 0, ;
		Caption = "TimeStamp Filter", ;
		ControlSource = "Thisform.oSearchEngine.oSearchOptions.lTimeStamp", ;
		FontBold = .F., ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 17, ;
		Left = 7, ;
		Name = "chkTimeStamp", ;
		TabIndex = 20, ;
		Top = 1, ;
		Value = .T., ;
		Width = 104
		*< END OBJECT: BaseClass="checkbox" />

	ADD OBJECT 'Label11' AS label WITH ;
		AutoSize = .T., ;
		BackColor = 0,128,0, ;
		BackStyle = 0, ;
		Caption = "From", ;
		FontBold = .F., ;
		FontItalic = .F., ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		ForeColor = 0,0,0, ;
		Height = 15, ;
		Left = 11, ;
		Name = "Label11", ;
		TabIndex = 40, ;
		Top = 31, ;
		Width = 26
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Label12' AS label WITH ;
		AutoSize = .T., ;
		BackColor = 0,128,0, ;
		BackStyle = 0, ;
		Caption = "To", ;
		FontBold = .F., ;
		FontItalic = .F., ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		ForeColor = 0,0,0, ;
		Height = 15, ;
		Left = 12, ;
		Name = "Label12", ;
		TabIndex = 40, ;
		Top = 55, ;
		Width = 14
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'txtTimeStampFrom' AS textbox WITH ;
		Alignment = 3, ;
		Anchor = 0, ;
		ControlSource = "Thisform.oFilter.Timestamp_FilterFrom", ;
		FontName = "Tahoma", ;
		FontSize = 9, ;
		Height = 23, ;
		Left = 42, ;
		Name = "txtTimeStampFrom", ;
		SelectOnEntry = .T., ;
		TabIndex = 30, ;
		Top = 26, ;
		Value = {}, ;
		Width = 95, ;
		ZOrderSet = 19
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'txtTimeStampTo' AS textbox WITH ;
		Alignment = 3, ;
		Anchor = 0, ;
		ControlSource = "Thisform.oFilter.Timestamp_FilterTo", ;
		FontName = "Tahoma", ;
		FontSize = 9, ;
		Height = 23, ;
		Left = 42, ;
		Name = "txtTimeStampTo", ;
		SelectOnEntry = .T., ;
		TabIndex = 31, ;
		Top = 53, ;
		Value = {}, ;
		Width = 95, ;
		ZOrderSet = 20
		*< END OBJECT: BaseClass="textbox" />
	
	PROCEDURE Refresh
		This.ClearDecoration()
		
		llChecked = This.ShouldBeDecorated()
		This.txtTimeStampFrom.Enabled = llChecked
		This.txtTimeStampTo.Enabled = llChecked
		
		If llChecked
			This.Decorate()
		EndIf
		
		
		
	ENDPROC

	PROCEDURE shouldbedecorated
		Return !Empty(this.chkTimeStamp.Value)
	ENDPROC

	PROCEDURE chkTimeStamp.Click
		DoDefault()
		
		This.Parent.Refresh()
		
		This.Parent.txtTimeStampFrom.SetFocus()
	ENDPROC

	PROCEDURE Command2.Click
		This.Parent.txtTimeStampFrom.Value = {}
		This.Parent.txtTimeStampTo.Value = {}
		this.Parent.ChkTimeStamp.Value = .f.
		this.Parent.Refresh()
		
	ENDPROC

ENDDEFINE

DEFINE CLASS gf_versionlabel AS label 
 	*< CLASSDATA: Baseclass="label" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<PropValue>
		Alignment = 1
		Anchor = 8
		BackColor = 0,128,0
		BackStyle = 0
		Caption = "Version"
		FontBold = .F.
		FontItalic = .F.
		FontName = "Tahoma"
		FontSize = 8
		ForeColor = 0,0,0
		Height = 13
		Name = "gf_versionlabel"
		TabIndex = 12
		Width = 228
	*</PropValue>
	
	PROCEDURE Refresh
		Local lcAppName, lcVersion
		
		lcAppName = JustStem(_Screen._GoFishClassic.cAppName)
		lcVersion = _Screen._GoFishClassic.cVersion
		
		Try
			This.Caption = 'Version ' + lcVersion + Iif('BETA' $ Upper(lcAppName), ' Beta', '')
		Catch
			This.Caption = 'GoFish'
		Finally
		Endtry
		
		This.Caption = This.Caption + ' (' + _Screen._GoFishClassic.cBuildDate + ')'
	ENDPROC

ENDDEFINE
